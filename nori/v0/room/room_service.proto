syntax = "proto3";

package nori.v0;

import "google/protobuf/empty.proto";

import "nori/v0/room/room.proto";
import "nori/v0/room/room_id.proto";
import "nori/v0/room/room_user_request.proto";
import "nori/v0/room/general/room_create_request.proto";
import "nori/v0/room/general/room_basic_info_request.proto";
import "nori/v0/room/member/invite_user_to_room_request.proto";
import "nori/v0/room/member/room_join_invite_reply.proto";
import "nori/v0/room/member/room_join_request_reply.proto";

/**
 * Room services.
 */
service RoomService {
  // Authentication: Required. Create a new room.
  rpc CreateRoom (RoomCreateRequest) returns (RoomId);

  // Authentication: Required. Get room information. TODO: tear down and avoid return whole room object.
  rpc GetRoom (RoomUserRequest) returns (Room);

  // Basic information

  // Authentication: Required. Update room basic/overview information.
  rpc UpdateRoomBasic (RoomBasicInfoRequest) returns (google.protobuf.Empty);

  // Membership

  // Authentication: Required. Invite a user to a room.
  rpc InviteToRoom (InviteUserToRoomRequest) returns (google.protobuf.Empty);

  // Authentication: Required. Reply an invitation to a room.
  rpc InviteRoomReply (RoomJoinInviteReply) returns (google.protobuf.Empty);

  // Authentication: Required. Ask to join a room.
  rpc JoinRoom (RoomUserRequest) returns (google.protobuf.Empty);

  // Authentication: Required. Reply to a join room request.
  rpc JoinRoomReply (RoomJoinRequestReply) returns (google.protobuf.Empty);

  // Authentication: Required. Leave a room. When there's no user left in the room, the room will be deleted.
  rpc LeaveRoom (RoomUserRequest) returns (google.protobuf.Empty);
}
