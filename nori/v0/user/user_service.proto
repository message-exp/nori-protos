syntax = "proto3";

package nori.v0;

import "google/protobuf/empty.proto";

import "nori/v0/user/user_id.proto";
import "nori/v0/user/account/user.proto";
import "nori/v0/user/account/signup_request.proto";
import "nori/v0/user/account/user_profile_update_request.proto";
import "nori/v0/user/access/access_token.proto";
import "nori/v0/user/access/token_pairs.proto";
import "nori/v0/user/access/user_login.proto";
import "nori/v0/user/access/user_reset_password_request.proto";
import "nori/v0/room/room_list.proto";

/**
 * User services.
 */
service UserService {
  // Account

  // Authentication: Not required. Get user information.
  rpc GetUser (UserId) returns (User);
  
  // Authentication: Not required. Sign up a new user.
  rpc Signup (SignUpRequest) returns (TokenPair);

  // Authentication: Required. Delete a user.
  rpc DeleteUser (UserId) returns (google.protobuf.Empty);

  // TODO: GetUserProfile

  // Authentication: Required. Update user profile information.
  rpc UpdateUserProfile (UserProfileUpdateRequest) returns (google.protobuf.Empty);
  
  // Security

  // Login with email and password.
  rpc Login (UserEmailPasswordLogin) returns (TokenPair);

  // Authentication: Required. Log out the user.
  rpc Logout (TokenPair) returns (google.protobuf.Empty);
  // TODO: add user_id to request (because the unique scope of refresh tokens is each users)

  // Authentication: Required. Refresh user token.
  rpc RefreshToken (UserId) returns (AccessToken);
  // TODO: give refresh token to server (header or body?), and the server will give the client a new "refresh token" and access token.
  // TODO: rename to RefreshUserToken

  // Authentication: Required. Reset user password.
  rpc ResetUserPassword (UserResetPasswordRequest) returns (google.protobuf.Empty);

  // Network

  // Authentication: Required. Get user room list.
  rpc GetUserRoomList (UserId) returns (RoomList);

  // TODO: contact list
  // Authentication: Required. ...
  // GetContactList
  // GetContact
  // AddContact
  // UpdateContact
  // DeleteContact
  // BlockContact
  // UnblockContact
  // ......
}
