/**
 * NORI API 0.1
 */

syntax = "proto3";

package nori.v0;

// import "google/protobuf/empty.proto";
// import "google/protobuf/timestamp.proto";

message UserChangeHomeServerRequest {
  string user_id = 1;
  string old_home_server = 2;
  string new_home_server = 3;
}

message UserChangeHomeServerResponse {
  
}

message SendToUsersRequest {
  string from_server = 1;
  string to_user_id = 2;
  string content = 3; // something encrypted or other message format
}

message SendToUsersResponse {
  
}

message SendToRoomsRequest {
  string from_server = 1;
  string to_room_id = 2;
  string content = 3; // something encrypted or other message format
}

message SendToRoomsResponse {
  
}

message GetUsersRequest {
  string from_server = 1;
  repeated string user_ids = 2;
}

message GetUsersResponse {
  string user_id = 1;
  string home_server = 2;
  string data = 3; // 
}

message GetRoomsRequest {
  string from_server = 1;
  repeated string room_ids = 2;
}

message GetRoomsResponse {
  string room_id = 1;
  string home_server = 2;
  string data = 3; // 
}


/**
 * Server-Server API for federated server communication.
 */
service ServerFederal {
  rpc UserChangeHomeServer (UserChangeHomeServerRequest) returns (UserChangeHomeServerResponse); // tear into checking request and moving process?

  // send event data to another server
  rpc SendToUsers (stream SendToUsersRequest) returns (SendToUsersResponse);
  rpc SendToRooms (stream SendToRoomsRequest) returns (SendToRoomsResponse);

  // get data from another server (not including event data, which should store in the self home server)
  rpc GetUsersData (stream GetUsersRequest) returns (stream GetUsersResponse);
  rpc GetRoomsData (stream GetRoomsRequest) returns (stream GetRoomsResponse);
}
