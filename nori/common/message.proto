syntax = "proto3";

package nori.common.message.v0;

import "common/types.proto";

// 語音訊息
message AudioMessage {
  string url = 1;
  int32 duration = 2;
  string name = 3;
}

// 貼圖訊息
message StickerMessage {
  string url = 1;
  string name = 2;
  string info_url = 3;  // 貼圖資訊 URL (e.g., LINE 貼圖商店頁面)
}

// 相片訊息 (是否與檔案合併? 因為有 parse 參數)
message ImageMessage {
  string url = 1;
  int32 width = 2;
  int32 height = 3;
  string name = 4;
}

// 影片訊息 (是否與檔案合併? 因為有 parse 參數)
message VideoMessage {
  string url = 1;
  int32 width = 2;
  int32 height = 3;
  int32 duration = 4;
  string name = 5;
}

// 檔案訊息
message FileMessage {
  string url = 1;
  string name = 2;
  int32 size = 3;
  bool parse = 4;  // 是否解析檔案內容 (e.g. audio, image, video, contact, location, calendar event, etc.)
}

// 單種類型的訊息
message MessageContent {
  MessageType type = 1;
  oneof content {
    string text = 2;
    AudioMessage audio = 3;
    StickerMessage sticker = 4;
    ImageMessage image = 5;
    VideoMessage video = 6;
    FileMessage file = 7;
  }
}

// 已讀標記
message ReadMark {
  string user_id = 1; // UUID
  bool read = 2; // 標記/取消已讀
  bool anonymous = 3; // 是否匿名
  int64 timestamp = 4;
}

// 訊息反應結構
message Reaction {
  string reaction_id = 1; // UUID
  string emoji = 2; // Emoji 表情符號
  string user_id = 3; // 添加反應的使用者
}

// 訊息結構
message Message {
  string message_id = 1; // UUID
  string sender_id = 2; // UUID
  string room_id = 3; // UUID
  string source_network = 4; // 來源網路 (e.g., "LINE", "Facebook", "Telegram", "Slack", "Discord", "WhatsApp", "WeChat", "KakaoTalk", "Viber", "Signal", "Skype", "Hangouts", "iMessage", "SMS", "Email", "Phone Call", "FaceTime", "Zoom", "Google Meet", "Microsoft Teams") => by GitHub Copilot
  repeated MessageContent content = 5;
  int64 timestamp = 6;
  repeated string edit_history = 7;
  repeated Reaction reactions = 8;
  repeated ReadMark read_marks = 9;
}
